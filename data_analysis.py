import os
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from clearml import Dataset
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã –∏–∑ .env
load_dotenv()

# –ö—ç—à–∏—Ä—É–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–ª—å–∫–æ –∏–∑ ClearML
@st.cache_data
def load_from_clearml():
    dataset = Dataset.get(
        dataset_project="Predictive Maintenance",
        dataset_name="Predictive Maintenance Dataset"
    )
    local_path = dataset.get_local_copy()
    file_path = os.path.join(local_path, "predictive_maintenance.csv")
    data = pd.read_csv(file_path)
    return data

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö
def data_analysis_page():
    st.title("–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞")

    st.subheader("üîç –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞")
    source = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö:", ("–õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª", "ClearML"))

    data = None
    if source == "–õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª":
        uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV-—Ñ–∞–π–ª", type=["csv"])
        if uploaded_file is not None:
            data = pd.read_csv(uploaded_file)
            st.success("‚úÖ –î–∞—Ç–∞—Å–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞")
    elif source == "ClearML":
        try:
            st.info("‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è –∏–∑ ClearML...")
            data = load_from_clearml()
            st.success("‚úÖ –î–∞—Ç–∞—Å–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ ClearML")
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ ClearML: {e}")
            return

    if data is None:
        st.warning("‚ö† –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∞—Ç–∞—Å–µ—Ç –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è")
        return

    st.write("üìå –ü–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–∞—Ç–∞—Å–µ—Ç–∞:")
    st.dataframe(data.head())

    # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞
    st.header("–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞")
    
    st.subheader("1. –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π –∏ —Å–≤—è–∑–µ–π")

    numeric_features = data.select_dtypes(include='number').columns
    fig, axes = plt.subplots(nrows=3, ncols=4, figsize=(20, 15))
    axes = axes.flatten()

    for i, feature in enumerate(numeric_features):
        sns.histplot(data[feature], kde=True, bins=30, color='steelblue', ax=axes[i])
        axes[i].set_title(f"–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {feature}")
        axes[i].set_xlabel("")
        axes[i].set_ylabel("")

    plt.suptitle("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Å KDE", fontsize=18)
    plt.tight_layout(rect=[0, 0.03, 1, 0.97])
    st.pyplot(fig)

    st.subheader("2. –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")

    corr_matrix = data.select_dtypes(include='number').corr()
    fig, ax = plt.subplots(figsize=(14, 10))
    sns.heatmap(corr_matrix, annot=True, fmt=".2f", cmap="coolwarm",
                square=True, linewidths=0.5, cbar_kws={"shrink": .8}, ax=ax)
    ax.set_title("–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤", fontsize=16)
    st.pyplot(fig)

    st.subheader("3. –ü–∞—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∑–∞–∏–º–æ—Å–≤—è–∑–µ–π –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")

    feature_cols = [
        'Air temperature [K]',
        'Process temperature [K]',
        'Rotational speed [rpm]',
        'Torque [Nm]',
        'Tool wear [min]'
    ]

    if 'Machine failure' in data.columns:
        fig = sns.pairplot(data[feature_cols + ['Machine failure']], hue='Machine failure', palette='Set1')
        st.pyplot(fig)

    failure_labels = ['TWF', 'HDF', 'PWF', 'OSF', 'RNF']
    for label in failure_labels:
        if label in data.columns:
            fig = sns.pairplot(data[feature_cols + [label]], hue=label, palette='tab10', diag_kind='kde')
            fig.fig.suptitle(f"–ü–∞—Ä–Ω—ã–µ –≤–∑–∞–∏–º–æ—Å–≤—è–∑–∏ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø–æ –º–µ—Ç–∫–µ {label}", y=1.02, fontsize=14)
            st.pyplot(fig)
